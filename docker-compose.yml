version: "3.8"

services:
    db:
        image: postgres:14
        container_name: pg
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        volumes:
            - db-data:/var/lib/postgresql/data
        networks:
            - app-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
            interval: 5s
            retries: 5

    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: go-rest-api:latest
        container_name: go-api
        depends_on:
            db:
                condition: service_healthy
        ports:
            - "${PORT}:${PORT}"
        environment:
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_SSL_MODE: ${DB_SSL_MODE}
            DB_CONNECT_TIMEOUT: ${DB_CONNECT_TIMEOUT}
            DB_IDLE_TIMEOUT: ${DB_IDLE_TIMEOUT}
            PORT: ${PORT}
        networks:
            - app-network

volumes:
    db-data:

networks:
    app-network:
        driver: bridge
